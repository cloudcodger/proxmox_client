---
- name: Make sure that any required constuct values are set.
  ansible.builtin.assert:
    that:
      - cloud_init_construct_cidr_start is defined
      - cloud_init_construct_hosts | length > 0
    quiet: true
  when: cloud_init_construct_controllers + cloud_init_construct_workers > 0

- name: Construct cloud_init_vms list
  ansible.builtin.set_fact:
    vms:
      name: "{{ cloud_init_construct_ctrl_prefix if
        generated_vm_is_controller else
        cloud_init_construct_work_prefix
        }}{{ item + 1 if generated_vm_is_controller
        else item + 1 - cloud_init_construct_controllers }}"
      control: "{{ generated_vm_is_controller }}"
      genesis: "{{ omit if item > 0 else true }}"
      ip: "{{ cloud_init_construct_cidr_start | ansible.utils.ipmath(item)
        }}/{{ cloud_init_construct_cidr_start | split('/') | last }}"
      ip6: "{{ '%s/%s' | format(
        cloud_init_construct_cidr6_start | default('::/0') | ansible.utils.ipmath(item),
        cloud_init_construct_cidr6_start | split('/') | last)
        if cloud_init_construct_cidr6_start is defined else omit }}"
      pm_host: "{{ cloud_init_construct_hosts[item % cloud_init_construct_hosts | length] }}"
      tags: "{{ cloud_init_genesis_tags if item == 0 else
        cloud_init_ctrl_tags if generated_vm_is_controller else
        cloud_init_work_tags }}"
      vmid: "{{ '%03d' | format(cloud_init_construct_vmid_start + item)
        if cloud_init_construct_vmid_start is defined else omit }}"
  register: generated_vms
  loop: "{{ range(0, cloud_init_construct_controllers + cloud_init_construct_workers) | list }}"
  vars:
    generated_vm_is_controller: "{{ item < cloud_init_construct_controllers }}"

- name: Combine constructed virtual machines and cloud_init_vms.
  ansible.builtin.set_fact:
    combined_vms: "{{ cloud_init_vms + generated_vms.results |
      map(attribute='ansible_facts.vms') }}"

- name: Include the creation tasks.
  ansible.builtin.include_tasks: creator.yml
  loop: "{{ combined_vms }}"
  loop_control:
    loop_var: creator_item
  vars:
    generated_vm_is_controller: "{{ creator_item.control | default(false) }}"

- name: Flush handlers.
  meta: flush_handlers

- name: Wait for the new systems to be accessible.
  ansible.builtin.wait_for_connection:
  delegate_to: "{{ item.name }}"
  loop: "{{ combined_vms }}"
  loop_control:
    label: "{{ item.name }}"
