---
- name: Make sure that SSH Keys are set.
  ansible.builtin.assert:
    that: lxc_sshkeys is defined
    quiet: true

- name: Make sure that any required constuct values are set.
  ansible.builtin.assert:
    that:
      - lxc_construct_cidr_start is defined
      - lxc_construct_hosts | length > 0
    quiet: true
  when: lxc_construct_containers > 0

- name: Construct containers list
  ansible.builtin.set_fact:
    cts:
      name: "{{ lxc_construct_container_prefix }}{{ item + 1 }}"
      ip: "{{ lxc_construct_cidr_start | ansible.utils.ipmath(item)
        }}/{{ lxc_construct_cidr_start | split('/') | last }}"
      ip6: "{{ '%s/%s' | format(
        lxc_construct_cidr6_start | default('::/0') | ansible.utils.ipmath(item),
        lxc_construct_cidr6_start| split('/') | last)
        if lxc_construct_cidr6_start is defined else omit }}"
      pm_host: "{{ omit if not lxc_construct_hosts else lxc_construct_hosts[item % lxc_construct_hosts | length] }}"
      tags: "{{ lxc_construct_ct0_tags if lxc_construct_ct0_tags and item < 1 else
        omit }}"
      vmid: "{{ '%03d' | format(lxc_construct_vmid_start + item)
        if lxc_construct_vmid_start is defined else omit }}"
  register: generated_lxcs
  loop: "{{ range(0, lxc_construct_containers) | list }}"

- name: Combine constructed containers and containers.
  ansible.builtin.set_fact:
    combined_lxcs: "{{ lxc_cts + generated_lxcs.results
      | map(attribute='ansible_facts.cts') }}"

- name: Include the creation tasks.
  ansible.builtin.include_tasks: creator.yml
  loop: "{{ combined_lxcs }}"
  loop_control:
    loop_var: creator_item

- name: Flush handlers.
  meta: flush_handlers

- name: Wait for the new systems to be accessible.
  ansible.builtin.wait_for_connection:
  delegate_to: "{{ item.name }}"
  loop: "{{ combined_lxcs }}"
  loop_control:
    label: "{{ item.name }}"
